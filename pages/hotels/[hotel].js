import Head from "next/head";
import Header from "../../components/Header";
import LocationOnIcon from "@mui/icons-material/LocationOn";
import ImageContainer from "../../components/ImageContainer";
import { useContext, useState } from "react";
import Slider from "../../components/Slider";
import useFetch from "../../hook/useFetch";
import { useRouter } from "next/router";
import { SearchContext } from "../../context/SearchContext";
import { AuthContext } from "../../context/AuthContext";
import ReserveModal from "../../components/ReserveModal";
import Navbar from "../../components/Navbar";
import Footer from "../../components/Footer";
export default function SingleHotel() {
  const images = [
    "/assets/property/resort.png",
    "/assets/property/boat.png",
    "/assets/property/cabins.png",
    "/assets/property/resort.png",
    "/assets/property/villas.png",
    "/assets/property/resort.png",
    "/assets/property/apartment.png",
    "/assets/property/villas.png",
  ];
  const router = useRouter();
  const [slideNumber, setSlideNumber] = useState(0);
  const [openSlider, setOpenSlider] = useState(false);
  const [reserve, setReserve] = useState(false);

  const { payload, error, fetching } = useFetch(
    `https://myhotelreservationsite.herokuapp.com/api/hotels/find/${router.query.hotel}`
  );

  const { user } = useContext(AuthContext);

  const { endDate, startDate, rooms } = useContext(SearchContext);
  const nights = endDate?.split("-")[1] - startDate?.split("-")[1];
  const TotalRoomPrice = rooms * payload.cheapestPrice;
  const TotalPrice = TotalRoomPrice * nights;

  const handleReserve = () => {
    if (!user) {
      router.push("/login");
    } else {
      setReserve((prev) => !prev);
    }
  };

  return (
    <div>
      <Head>
        <title>Hotel Reservation | {payload.name} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Header />
      {openSlider ? (
        <Slider
          slideNumber={slideNumber}
          images={images}
          setOpenSlider={setOpenSlider}
          setSlideNumber={setSlideNumber}
        />
      ) : (
        " "
      )}
      {fetching ? (
        "Lodaing"
      ) : (
        <>
          <div className="p-2 flex mt-2 mx-5">
            <div className="w-full flex justify-between">
              <div className="w-[80%] flex flex-col space-y-1">
                <h1 className="text-xx font-semibold">{payload.title}</h1>
                <div className="flex items-center justify-start">
                  <LocationOnIcon className=" text-xs text-gray-500" />
                  <p className="text-xs"> {payload.address}</p>
                </div>

                <h1 className="text-xs">
                  {payload.rating > 3 ? "Excellent" : "Very Good"} location -
                  {payload.distances} from center
                </h1>
                <h1 className="text-xs text-green-600">
                  Book a stay over ${payload.cheapestPrice} at this property and
                  get a free airport taxi
                </h1>
              </div>
              <div className="w-[20%] flex flex-col">
                <button
                  onClick={handleReserve}
                  className=" flex-start text-xs p-2 rounded-full transition duration-40 hover:bg-blue-600 bg-blue-800 text-white flex items-center justify-center cursor-pointer w-[75%]"
                >
                  Reserve or Book Now!!
                </button>
              </div>
            </div>
          </div>
          <ImageContainer
            images={images}
            setOpenSlider={setOpenSlider}
            setSlideNumber={setSlideNumber}
          />
          <div className="mx-5 flex justify-between p-2">
            <div className="p-1 flex flex-col w-[80%]">
              <h1 className="text-2xl font-bold text-gray-500">
                {payload.title}
              </h1>
              <p className="text-xs">{payload.description}</p>
            </div>
            <div className="p-2 flex flex-col w-[20%] bg-blue-200 rounded-xl space-y-2">
              <h1 className="text-xx font-bold">
                Perfect for a {nights}-night stay!!
              </h1>
              <p className="text-xs">
                Loacated in the real heart of krakow,this property has excellent
                location
              </p>
              <h1 className="text-xl font-bold text-gray-500">
                ${TotalPrice}
                <p className="text-xl inline font-medium">({nights}) nights</p>
              </h1>
              <button
                onClick={handleReserve}
                className="text-xs p-2 rounded-full transition duration-40 hover:bg-blue-600 bg-blue-800 text-white flex items-center justify-center cursor-pointer w-[90%] md:w-[70%]"
              >
                Reserve or book now!!
              </button>
            </div>
          </div>
        </>
      )}
      <Footer />
      {reserve ? (
        <ReserveModal setReserve={setReserve} hotelId={payload._id} />
      ) : (
        ""
      )}
    </div>
  );
}
